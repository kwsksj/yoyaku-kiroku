// @ts-check
/// <reference path="../../types/dev-environment.d.ts" />
/// <reference path="../../types/html-environment.d.ts" />
/// <reference path="../../types/api-types.d.ts" />

/**
 * =================================================================
 * „Äê„Éï„Ç°„Ç§„É´Âêç„Äë: 14_WebApp_Handlers_Auth.js
 * „Äê„Éê„Éº„Ç∏„Éß„É≥„Äë: 1.1
 * „ÄêÂΩπÂâ≤„Äë: WebApp„ÅÆ„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Å´„Åä„Åë„Çã„ÄÅË™çË®º„Éª„É¶„Éº„Ç∂„ÉºÁÆ°ÁêÜÈñ¢ÈÄ£„ÅÆ
 * „Ç¢„ÇØ„Ç∑„Éß„É≥„Éè„É≥„Éâ„É©„Éº„ÇíÈõÜÁ¥Ñ„Åó„Åæ„Åô„ÄÇ
 * „ÄêÊßãÊàê„Äë: 14„Éï„Ç°„Ç§„É´ÊßãÊàê„Åã„ÇâÂàÜÂâ≤„Åï„Çå„ÅüË™çË®ºÁÆ°ÁêÜ„Éï„Ç°„Ç§„É´
 * „ÄêÊ©üËÉΩÁØÑÂõ≤„Äë:
 * - „É≠„Ç∞„Ç§„É≥„Éª„É≠„Ç∞„Ç¢„Ç¶„ÉàÂá¶ÁêÜ
 * - Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤Ôºà4„Çπ„ÉÜ„ÉÉ„ÉóÔºâ
 * - „Éó„É≠„Éï„Ç£„Éº„É´ÁÆ°ÁêÜÔºàË°®Á§∫„ÉªÁ∑®ÈõÜ„Éª‰øùÂ≠òÔºâ
 * =================================================================
 */

// =================================================================
// --- Authentication Action Handlers ---
// -----------------------------------------------------------------
// Ë™çË®º„Éª„É¶„Éº„Ç∂„ÉºÁÆ°ÁêÜÈñ¢ÈÄ£„ÅÆ„Ç¢„ÇØ„Ç∑„Éß„É≥„Éè„É≥„Éâ„É©„ÉºÁæ§
// =================================================================

/** Ë™çË®ºÈñ¢ÈÄ£„ÅÆ„Ç¢„ÇØ„Ç∑„Éß„É≥„Éè„É≥„Éâ„É©„ÉºÁæ§ */
const authActionHandlers = {
  /** „É≠„Ç∞„Ç§„É≥„Åæ„Åü„ÅØÊñ∞Ë¶èÁôªÈå≤„ÇíÈñãÂßã„Åó„Åæ„ÅôÔºà„Ç≠„É£„ÉÉ„Ç∑„É•Ê¥ªÁî®ÁâàÔºâ */
  login: () => {
    const phoneInput = getInputElementSafely('phone');
    const p = phoneInput?.value || '';
    // ÂÖ•ÂäõÂÄ§„ÇísetStateÁµåÁî±„Åß‰øùÂ≠ò
    window.stateManager.dispatch({
      type: 'UPDATE_STATE',
      payload: { loginPhone: p },
    });
    if (!p) return showInfo('ÈõªË©±Áï™Âè∑„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ', 'ÂÖ•Âäõ„Ç®„É©„Éº');

    // „ÄêÊúÄÈÅ©ÂåñÊ∏à„Åø„Äë „Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Åß„É™„Ç¢„É´„Çø„Ç§„É†Ê§úË®ºÔºàUXÂêë‰∏äÔºâ
    // „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Åß„ÅØËªΩÈáè„ÉÅ„Çß„ÉÉ„ÇØ„ÅÆ„ÅøÂÆüË°åÔºàÈáçË§áÂá¶ÁêÜÂâäÊ∏õÔºâ
    const normalizeResult = window.normalizePhoneNumberFrontend(p);

    if (!normalizeResult.isValid) {
      showInfo(
        normalizeResult.error || 'ÈõªË©±Áï™Âè∑„ÅÆÂΩ¢Âºè„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ',
        'ÂÖ•Âäõ„Ç®„É©„Éº',
      );
      return;
    }

    showLoading('login');
    // Ê≠£Ë¶èÂåñ„Å´ÊàêÂäü„Åó„ÅüÂ†¥Âêà„ÅØÁõ¥Êé•„É≠„Ç∞„Ç§„É≥Âá¶ÁêÜ„ÇíÂÆüË°åÔºà1Âõû„ÅÆAPIÂëº„Å≥Âá∫„ÅóÔºâ
    authActionHandlers.processLoginWithValidatedPhone(
      normalizeResult.normalized,
    );
  },

  /** Áµ±Âêà„É≠„Ç∞„Ç§„É≥Âá¶ÁêÜÔºö1Âõû„ÅÆAPIÂëº„Å≥Âá∫„Åó„ÅßË™çË®º„Å®„Éá„Éº„ÇøÂèñÂæó„ÇíÂÆå‰∫Ü
   * @param {string} normalizedPhone */
  processLoginWithValidatedPhone: normalizedPhone => {
    debugLog('üöÄ Áµ±Âêà„É≠„Ç∞„Ç§„É≥ÈñãÂßã - Ë™çË®º+„Éá„Éº„Çø‰∏ÄÊã¨ÂèñÂæó');

    // Áµ±Âêà„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅßË™çË®º„Å®„Åô„Åπ„Å¶„ÅÆ„Éá„Éº„Çø„Çí‰∏ÄÊã¨ÂèñÂæó
    google.script.run['withSuccessHandler']((/** @type {any} */ response) => {
      if (response.success && response.userFound) {
        debugLog(
          '‚úÖ Áµ±Âêà„É≠„Ç∞„Ç§„É≥ÊàêÂäü - „É¶„Éº„Ç∂„Éº: ' + response.user.displayName,
        );
        debugLog(
          `üì¶ „Éá„Éº„Çø‰∏ÄÊã¨ÂèñÂæóÂÆå‰∫Ü: ‰∫àÁ¥Ñ${response.data.myReservations?.length || 0}‰ª∂, „É¨„ÉÉ„Çπ„É≥${response.data.lessons?.length || 0}‰ª∂`,
        );

        // ÂÆåÂÖ®„Å™„Ç¢„Éó„É™Áä∂ÊÖã„Çí‰∏ÄÂ∫¶„Å´ÊßãÁØâ
        const newAppState = {
          view: 'dashboard',
          currentUser: response.user,
          myReservations: response.data.myReservations || [],
          lessons: response.data.lessons || [],
          classrooms: CONSTANTS.CLASSROOMS
            ? Object.values(CONSTANTS.CLASSROOMS)
            : [],
          accountingMaster: response.data.accountingMaster || [],
          today: new Date().toISOString().split('T')[0],
        };

        hideLoading();
        debugLog('‚úÖ Áµ±Âêà„É≠„Ç∞„Ç§„É≥ÂÆå‰∫Ü - ÂÆåÂÖ®„Å™„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâË°®Á§∫');

        window.stateManager.dispatch({
          type: 'SET_STATE',
          payload: {
            ...newAppState,
            recordsToShow: CONSTANTS.UI.HISTORY_INITIAL_RECORDS,
            isDataFresh: true,
          },
        });

        // ÈÄöÁü•Ë®≠ÂÆö„ÉÅ„Çß„ÉÉ„ÇØÔºö„É°„Éº„É´ÈÄ£Áµ°Â∏åÊúõON„ÅßÈÄöÁü•Ë®≠ÂÆö„ÅåÊú™Ë®≠ÂÆö„ÅÆÂ†¥Âêà„Å´ÂñöËµ∑
        if (
          response.user.wantsEmail &&
          (response.user.notificationDay == null ||
            response.user.notificationDay === '')
        ) {
          setTimeout(() => {
            showInfo(
              'ÊúàÊ¨°„É°„Éº„É´ÈÄöÁü•„ÅÆË®≠ÂÆö„ÅåÊú™ÂÆå‰∫Ü„Åß„Åô„ÄÇ\n\n„Éó„É≠„Éï„Ç£„Éº„É´Á∑®ÈõÜ„Åã„Çâ„ÄåÈÄöÁü•„ÇíÂèó„ÅëÂèñ„ÇãÊó•„Äç„Å®„ÄåÈÄöÁü•ÊôÇÂàª„Äç„ÇíË®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
              'ÈÄöÁü•Ë®≠ÂÆö„ÅÆ„ÅäÈ°ò„ÅÑ',
            );
          }, 500);
        }
      } else {
        // Ë™çË®ºÂ§±Êïó - Êñ∞Ë¶èÁôªÈå≤„Å´Ë™òÂ∞é
        hideLoading();
        debugLog('‚ùå „É¶„Éº„Ç∂„ÉºÊú™ÁôªÈå≤ - Êñ∞Ë¶èÁôªÈå≤ÁîªÈù¢„Å∏');
        window.stateManager.dispatch({
          type: 'SET_STATE',
          payload: {
            view: 'register',
            registrationPhone: normalizedPhone,
          },
        });
      }
    })
      .withFailureHandler((/** @type {Error} */ err) => {
        debugLog('‚ùå Áµ±Âêà„É≠„Ç∞„Ç§„É≥„Ç®„É©„Éº: ' + err.message);
        hideLoading();
        if (window.FrontendErrorHandler) {
          window.FrontendErrorHandler.handle(
            err,
            'processLoginWithValidatedPhone_integrated',
          );
        }
        handleServerError(err);
      })
      .getLoginData(normalizedPhone);
  },

  /** Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤ÔºöStep1„Åã„ÇâStep2„Å∏ */
  goToStep2: () => {
    const realNameInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('reg-realname')
    );
    const nicknameInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('reg-nickname')
    );
    const phoneInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('reg-phone')
    );

    const realName = realNameInput?.value;
    const nickname = nicknameInput?.value.trim();
    const phone = phoneInput?.value;

    if (!realName) return showInfo('„ÅäÂêçÂâçÔºàÊú¨ÂêçÔºâ„ÅØÂøÖÈ†à„Åß„Åô„ÄÇ', 'ÂÖ•Âäõ„Ç®„É©„Éº');

    // „Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„ÅßÈõªË©±Áï™Âè∑„ÇíÊ≠£Ë¶èÂåñ„Éª„Éê„É™„Éá„Éº„Ç∑„Éß„É≥
    if (phone) {
      const normalizeResult = window.normalizePhoneNumberFrontend(phone);
      if (!normalizeResult.isValid) {
        showInfo(
          normalizeResult.error || 'ÈõªË©±Áï™Âè∑„ÅÆÂΩ¢Âºè„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ',
          'ÂÖ•Âäõ„Ç®„É©„Éº',
        );
        return;
      }
    }

    // ÂÖ•ÂäõÂÄ§„ÇísetStateÁµåÁî±„Åß‰øùÂ≠ò
    const updatedRegistrationData = {
      .../** @type {any} */ (stateManager.getState())?.['registrationData'],
      phone,
      realName,
      nickname: nickname || realName,
    };
    window.stateManager.dispatch({
      type: 'SET_STATE',
      payload: {
        registrationData: updatedRegistrationData,
        registrationStep: 2,
        view: 'registrationStep2',
      },
    });
  },

  /** Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤ÔºöStep2„Åã„ÇâStep1„Å∏„ÇÇ„Å©„Çã */
  backToStep1: () => {
    const emailInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('q-email')
    );
    const wantsEmailInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('q-wants-email')
    );
    const ageGroupInput = /** @type {HTMLSelectElement | null} */ (
      document.getElementById('q-age-group')
    );
    const genderInput = /** @type {HTMLInputElement | null} */ (
      document.querySelector('input[name="gender"]:checked')
    );
    const dominantHandInput = /** @type {HTMLInputElement | null} */ (
      document.querySelector('input[name="dominantHand"]:checked')
    );
    const addressInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('q-address')
    );

    const step2Data = {
      email: emailInput?.value || '',
      wantsEmail: wantsEmailInput?.checked || false,
      ageGroup: ageGroupInput?.value || '',
      gender: genderInput?.value || '',
      dominantHand: dominantHandInput?.value || '',
      address: addressInput?.value || '',
    };

    window.stateManager.dispatch({
      type: 'SET_STATE',
      payload: {
        registrationData: {
          .../** @type {any} */ (stateManager.getState())?.['registrationData'],
          ...step2Data,
        },
        registrationStep: 1,
        view: 'register',
      },
    });
  },

  /** Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤ÔºöStep2„Åã„ÇâStep3„Å∏ÈÄ≤„ÇÄ */
  goToStep3: () => {
    const emailInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('q-email')
    );
    const email = emailInput?.value;
    if (!email || !email.includes('@')) {
      return showInfo('ÊúâÂäπ„Å™„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ', 'ÂÖ•Âäõ„Ç®„É©„Éº');
    }

    const wantsEmailInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('q-wants-email')
    );
    const notificationDayInput = /** @type {HTMLSelectElement | null} */ (
      document.getElementById('q-notification-day')
    );
    const notificationHourInput = /** @type {HTMLSelectElement | null} */ (
      document.getElementById('q-notification-hour')
    );
    const ageGroupInput = /** @type {HTMLSelectElement | null} */ (
      document.getElementById('q-age-group')
    );
    const genderInput = /** @type {HTMLInputElement | null} */ (
      document.querySelector('input[name="gender"]:checked')
    );
    const dominantHandInput = /** @type {HTMLInputElement | null} */ (
      document.querySelector('input[name="dominantHand"]:checked')
    );
    const addressInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('q-address')
    );

    const step2Data = {
      email: email,
      wantsEmail: wantsEmailInput?.checked || false,
      notificationDay: notificationDayInput?.value
        ? parseInt(notificationDayInput.value)
        : null,
      notificationHour: notificationHourInput?.value
        ? parseInt(notificationHourInput.value)
        : null,
      ageGroup: ageGroupInput?.value || '',
      gender: genderInput?.value || '',
      dominantHand: dominantHandInput?.value || '',
      address: addressInput?.value || '',
    };

    window.stateManager.dispatch({
      type: 'SET_STATE',
      payload: {
        registrationData: {
          .../** @type {any} */ (stateManager.getState())?.['registrationData'],
          ...step2Data,
        },
        registrationStep: 3,
        view: 'registrationStep3',
      },
    });
  },

  /** Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤ÔºöStep3„Åã„ÇâStep2„Å∏„ÇÇ„Å©„Çã */
  backToStep2: () =>
    window.stateManager.dispatch({
      type: 'SET_STATE',
      payload: {
        view: 'registrationStep2',
        registrationStep: 2,
      },
    }),

  /** Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤ÔºöStep3„Åã„ÇâStep4„Å∏ÈÄ≤„ÇÄ */
  proceedToStep4: () => {
    /** @type {HTMLInputElement | null} */
    const experienceInput = document.querySelector(
      'input[name="experience"]:checked',
    );
    const pastWorkInput = /** @type {HTMLTextAreaElement | null} */ (
      document.getElementById('q-past-work')
    );
    const futureGoalInput = /** @type {HTMLTextAreaElement | null} */ (
      document.getElementById('q-future-goal')
    );

    const step3Data = {
      experience: experienceInput?.value || '',
      pastWork: pastWorkInput?.value || '',
      futureGoal: futureGoalInput?.value || '',
    };
    window.stateManager.dispatch({
      type: 'SET_STATE',
      payload: {
        registrationData: {
          .../** @type {any} */ (
            stateManager.getState()['registrationData'] || {}
          ),
          ...step3Data,
        },
        registrationStep: 4,
        view: 'registrationStep4',
      },
    });
  },

  /** Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤ÔºöStep4„Åã„ÇâStep3„Å∏„ÇÇ„Å©„Çã */
  backToStep3: () =>
    window.stateManager.dispatch({
      type: 'SET_STATE',
      payload: {
        view: 'registrationStep3',
        registrationStep: 3,
      },
    }),

  /** Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤ÔºöÊúÄÁµÇ„Éá„Éº„Çø„Çí„Çµ„Éº„Éê„Éº„Å´ÈÄÅ‰ø°ÔºàÁ∞°Á¥†ÂåñÁâàÔºâ */
  submitRegistration: () => {
    /** @type {HTMLInputElement | null} */
    const futureParticipationInput = document.querySelector(
      'input[name="futureParticipation"]:checked',
    );
    const triggerInput = /** @type {HTMLSelectElement | null} */ (
      document.getElementById('q-trigger')
    );
    const firstMessageInput = /** @type {HTMLTextAreaElement | null} */ (
      document.getElementById('q-first-message')
    );

    const step4Data = {
      futureParticipation: futureParticipationInput?.value || '',
      trigger: triggerInput?.value || '',
      firstMessage: firstMessageInput?.value || '',
    };

    const finalUserData = {
      .../** @type {any} */ (stateManager.getState()['registrationData'] || {}),
      ...step4Data,
    };

    showLoading('booking');
    google.script.run['withSuccessHandler'](
      (
        /** @type {ServerResponse<{ user: UserData; message: string }>} */ res,
      ) => {
        if (!window.isProduction) {
          console.log('üîç registerNewUser „É¨„Çπ„Éù„É≥„Çπ:', res);
        }
        hideLoading();
        if (res.success && res.data) {
          // ÁôªÈå≤ÊàêÂäüÊôÇ„ÅØÁõ¥Êé•„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å´ÈÅ∑ÁßªÔºà„Éá„Éº„Çø„ÅØÂæå„Åã„Çâ„É≠„Éº„ÉâÔºâ
          showInfo('Êñ∞Ë¶è„É¶„Éº„Ç∂„ÉºÁôªÈå≤„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü', 'ÁôªÈå≤ÂÆå‰∫Ü');

          window.stateManager.dispatch({
            type: 'SET_STATE',
            payload: {
              currentUser: res.data.user,
              view: 'dashboard',
              myReservations: [], // Êñ∞Ë¶è„É¶„Éº„Ç∂„Éº„ÅØ‰∫àÁ¥Ñ„Åå„Å™„ÅÑ
              lessons: [], // „Éá„Éº„Çø„ÅØÂøÖË¶Å„Å´Âøú„Åò„Å¶Âæå„Åã„Çâ„É≠„Éº„Éâ
              isDataFresh: false, // „Éá„Éº„Çø„ÇíÂæå„Åß„É™„Éï„É¨„ÉÉ„Ç∑„É•„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„Åì„Å®„ÇíÁ§∫„Åô
            },
          });
        } else {
          showInfo(res.message || 'ÁôªÈå≤„Å´Â§±Êïó„Åó„Åæ„Åó„Åü', '„Ç®„É©„Éº');
        }
      },
    )
      ['withFailureHandler']((/** @type {Error} */ error) => {
        hideLoading();
        if (window.FrontendErrorHandler) {
          window.FrontendErrorHandler.handle(
            error,
            'submitRegistration:registerNewUser',
            { finalUserData },
          );
        }
        handleServerError(error);
      })
      .registerNewUser(finalUserData);
  },

  /** „Éó„É≠„Éï„Ç£„Éº„É´ÊÉÖÂ†±„Çí‰øùÂ≠ò„Åó„Åæ„ÅôÔºà„Ç≠„É£„ÉÉ„Ç∑„É•Ê¥ªÁî®ÁâàÔºâ */
  saveProfile: () => {
    const realNameInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('edit-realname')
    );
    const nicknameInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('edit-nickname')
    );

    const r = realNameInput?.value;
    let n = nicknameInput?.value.trim();
    if (!r) return showInfo('„ÅäÂêçÂâçÔºàÊú¨ÂêçÔºâ„ÅØÂøÖÈ†à„Åß„Åô„ÄÇ');
    if (!n) n = r;

    // NF-01: ÈõªË©±Áï™Âè∑ÂÖ•ÂäõÊ¨Ñ„Åå„ÅÇ„Çå„Å∞„Åù„ÅÆÂÄ§„ÇÇÂèñÂæó
    const phoneInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('edit-phone')
    );
    const phone =
      phoneInput?.value || stateManager.getState().currentUser.phone; // ÈõªË©±Áï™Âè∑ÂÖ•ÂäõÊ¨Ñ„Åå„Å™„Åë„Çå„Å∞Êó¢Â≠ò„ÅÆÈõªË©±Áï™Âè∑„Çí‰ΩøÁî®

    // ÈõªË©±Áï™Âè∑„ÅåÂÖ•Âäõ„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅÆ„Åø„Éê„É™„Éá„Éº„Ç∑„Éß„É≥
    if (phoneInput?.value) {
      const normalizeResult = window.normalizePhoneNumberFrontend(
        phoneInput.value,
      );
      if (!normalizeResult.isValid) {
        showInfo(
          normalizeResult.error || 'ÈõªË©±Áï™Âè∑„ÅÆÂΩ¢Âºè„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ',
          'ÂÖ•Âäõ„Ç®„É©„Éº',
        );
        return;
      }
    }

    // „É°„Éº„É´ÊÉÖÂ†±„ÅÆÂèñÂæó„Å®„Éê„É™„Éá„Éº„Ç∑„Éß„É≥
    const emailInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('edit-email')
    );
    const wantsEmailInput = /** @type {HTMLInputElement | null} */ (
      document.getElementById('edit-wants-email')
    );
    const email = emailInput?.value?.trim() || '';
    const wantsEmail =
      wantsEmailInput?.checked ||
      stateManager.getState().currentUser.wantsEmail;

    // „É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÅÆÂøÖÈ†à„Éê„É™„Éá„Éº„Ç∑„Éß„É≥
    if (!email || !email.includes('@')) {
      return showInfo('ÊúâÂäπ„Å™„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ', 'ÂÖ•Âäõ„Ç®„É©„Éº');
    }

    // ÈÄöÁü•Ë®≠ÂÆö„ÅÆÂèñÂæó
    const notificationDayInput = /** @type {HTMLSelectElement | null} */ (
      document.getElementById('edit-notification-day')
    );
    const notificationHourInput = /** @type {HTMLSelectElement | null} */ (
      document.getElementById('edit-notification-hour')
    );
    const notificationDay = notificationDayInput?.value
      ? parseInt(notificationDayInput.value)
      : null;
    const notificationHour = notificationHourInput?.value
      ? parseInt(notificationHourInput.value)
      : null;

    const u = {
      ...stateManager.getState().currentUser,
      realName: r,
      displayName: n,
      phone: phone,
      email: email || '',
      wantsEmail: wantsEmail || false,
      notificationDay: notificationDay,
      notificationHour: notificationHour,
    };
    showLoading('booking');
    google.script.run['withSuccessHandler']((/** @type {any} */ res) => {
      hideLoading();
      if (res.success) {
        // „Éó„É≠„Éï„Ç£„Éº„É´Êõ¥Êñ∞Âæå„ÄÅ„Ç≠„É£„ÉÉ„Ç∑„É•„ÇÇÊõ¥Êñ∞„Åï„Çå„Å¶„ÅÑ„Çã„ÅÆ„Åß„Åù„ÅÆ„Åæ„ÅæÁä∂ÊÖãÊõ¥Êñ∞
        showInfo('„Éó„É≠„Éï„Ç£„Éº„É´„ÇíÊõ¥Êñ∞„Åó„Åæ„Åó„Åü', 'Êõ¥Êñ∞ÂÆå‰∫Ü');
        window.stateManager.dispatch({
          type: 'SET_STATE',
          payload: {
            currentUser: res.updatedUser,
            view: 'dashboard',
          },
        });
      } else {
        showInfo(res.message || 'Êõ¥Êñ∞„Å´Â§±Êïó„Åó„Åæ„Åó„Åü', '„Ç®„É©„Éº');
      }
    })
      ['withFailureHandler'](handleServerError)
      .updateUserProfile(u);
  },

  /** „Éó„É≠„Éï„Ç£„Éº„É´Á∑®ÈõÜÁîªÈù¢„Å´ÈÅ∑Áßª„Åó„Åæ„Åô */
  goToEditProfile: () => {
    // „Éá„Éº„Çø„ÅåÂè§„Åè„ÄÅ„Åã„Å§Êõ¥Êñ∞‰∏≠„Åß„Å™„Åë„Çå„Å∞„Éá„Éº„Çø„ÇíÊõ¥Êñ∞
    if (
      !stateManager.getState().isDataFresh &&
      !stateManager.getState()._dataUpdateInProgress
    ) {
      updateAppStateFromCache('editProfile');
    } else {
      // Êñ∞„Åó„ÅÑdispatch„Éë„Çø„Éº„É≥„Çí‰ΩøÁî®
      if (window.stateManager) {
        window.stateManager.dispatch({
          type: 'CHANGE_VIEW',
          payload: { view: 'editProfile' },
        });
      } else {
        window.stateManager.dispatch({
          type: 'SET_STATE',
          payload: { view: 'editProfile' },
        });
      }
    }
  },

  /** „É≠„Ç∞„Ç§„É≥ÁîªÈù¢„Å´Êàª„Çä„Åæ„ÅôÔºàÈõªË©±Áï™Âè∑ÂÖ•ÂäõÂÄ§„Çí‰øùÂ≠òÔºâ */
  goBackToLogin: () => {
    const phoneInput = document.getElementById('phone');
    const loginPhone = phoneInput
      ? phoneInput.value
      : stateManager.getState()['loginPhone'];
    window.stateManager.dispatch({
      type: 'NAVIGATE',
      payload: { to: 'login', context: { loginPhone: loginPhone } },
    });
  },
};
