import fs from 'fs';
import path from 'path';

const targetDirs = [
  './types/generated-backend-globals',
  './types/generated-frontend-globals',
  './types/generated-shared-globals',
];

/**
 * 指定されたディレクトリ内のすべての .d.ts ファイルを再帰的に検索します。
 * @param {string} dir - 検索を開始するディレクトリ。
 * @returns {string[]} .d.ts ファイルの相対パスの配列。
 */
function findDtsFiles(dir) {
  let results = [];
  const list = fs.readdirSync(dir);
  list.forEach(file => {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);
    if (stat && stat.isDirectory()) {
      results = results.concat(findDtsFiles(filePath));
    } else if (filePath.endsWith('.d.ts') && !filePath.endsWith('index.d.ts')) {
      results.push(filePath);
    }
  });
  return results;
}

/**
 * 相対パスをモジュール指定子に変換
 * @param {string} relativePath
 * @returns {string}
 */
function toModuleSpecifier(relativePath) {
  let specifier = relativePath.replace(/\\/g, '/').replace(/\.d\.ts$/, '');
  if (!specifier.startsWith('.')) {
    specifier = `./${specifier}`;
  }
  return specifier;
}

targetDirs.forEach(dir => {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }

  const dtsFiles = findDtsFiles(dir);

  if (dtsFiles.length === 0) {
    console.log(
      `- No .d.ts files found to create an index for: ${path.basename(dir)}`,
    );
    fs.writeFileSync(path.join(dir, 'index.d.ts'), 'export {};\n', 'utf8');
    return;
  }

  const moduleSpecifiers = dtsFiles
    .map(file => path.relative(dir, file))
    .sort((a, b) => a.localeCompare(b, 'en'))
    .map(toModuleSpecifier);

  const contentLines = [
    '/**',
    ' * @file Auto-generated barrel file for type exports.',
    ' * This file is generated by tools/create-dts-index.js.',
    ' */',
    '',
  ];

  const globalsSpecifier = moduleSpecifiers.find(
    spec => spec === './_globals' || spec.endsWith('/_globals'),
  );

  if (globalsSpecifier) {
    contentLines.push(`export * from '${globalsSpecifier}';`);
  }

  moduleSpecifiers
    .filter(spec => spec !== globalsSpecifier)
    .forEach(spec => {
      contentLines.push(`export * from '${spec}';`);
    });

  if (contentLines[contentLines.length - 1] === '') {
    contentLines.push('export {};');
  } else {
    contentLines.push('', 'export {};');
  }

  fs.writeFileSync(
    path.join(dir, 'index.d.ts'),
    `${contentLines.join('\n')}\n`,
    'utf8',
  );

  console.log(
    `✅ Created index.d.ts for '${path.basename(dir)}' with ${moduleSpecifiers.length} exports.`,
  );
});

console.log('\n✨ Index file generation complete.');
