#!/usr/bin/env node

/**
 * =================================================================
 * 【ファイル名】: tools/create-global-bridge.js
 * 【役割】: 自動生成された型定義をグローバルスコープで利用可能にするブリッジファイルを生成
 * 【目的】: export const や export namespace を `declare global` でラップする
 * =================================================================
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// 設定
const TARGET_DIRS = [
  path.join(__dirname, '../types/generated-backend-globals'),
  path.join(__dirname, '../types/generated-frontend-globals'),
  path.join(__dirname, '../types/generated-shared-globals'),
];

/**
 * .d.tsファイルからexport宣言を抽出
 * @param {string} filePath - 型定義ファイルのパス
 * @returns {Array<{name: string}>}
 */
function extractExports(filePath) {
  const content = fs.readFileSync(filePath, 'utf8');
  const exports = [];
  const exportRegex = /^export (?:const|class|namespace|interface|type|function) (\w+)/gm;
  let match;

  while ((match = exportRegex.exec(content)) !== null) {
    exports.push({ name: match[1] });
  }
  return exports;
}

/**
 * ブリッジ型定義ファイルを生成
 */
function generateBridgeFiles() {
  console.log('🔍 Scanning generated type definitions to create global bridges...');

  for (const dir of TARGET_DIRS) {
    if (!fs.existsSync(dir)) {
      console.log(`- Skipping non-existent directory: ${path.basename(dir)}`);
      continue;
    }

    const files = fs.readdirSync(dir).filter(f => f.endsWith('.d.ts') && f !== 'index.d.ts' && f !== '_globals.d.ts');

    if (files.length === 0) {
      console.log(`- No .d.ts files to process in: ${path.basename(dir)}`);
      continue;
    }

    const allExports = [];
    for (const file of files) {
      const filePath = path.join(dir, file);
      const exports = extractExports(filePath);
      if (exports.length > 0) {
        allExports.push(...exports);
      }
    }

    if (allExports.length === 0) {
      console.log(`- No exports found in: ${path.basename(dir)}`);
      continue;
    }

    const globalDeclarations = allExports
      .map(exp => `  const ${exp.name}: typeof import('.').${exp.name};`)
      .join('\n');

    const content = `/**
 * @file This file is auto-generated by tools/create-global-bridge.js.
 * Do not edit this file manually.
 */

declare global {
${globalDeclarations}
}

export {};
`;

    const outputFile = path.join(dir, '_globals.d.ts');
    fs.writeFileSync(outputFile, content, 'utf8');
    console.log(`✅ Created _globals.d.ts for '${path.basename(dir)}' with ${allExports.length} declarations.`);
  }

  console.log('\n✨ Global bridge file generation complete.');
}

// メイン処理
try {
  generateBridgeFiles();
} catch (error) {
  console.error('❌ Error generating bridge files:', error.message);
  process.exit(1);
}